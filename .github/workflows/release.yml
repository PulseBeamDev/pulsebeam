name: Release Please

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  # Create a PR with the new versions and changelog, preparing the next release.
  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'PulseBeamDev' }}
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          # For publishing to crates.io, create a secret named CARGO_REGISTRY_TOKEN
          # CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Release unpublished packages.
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'PulseBeamDev' }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # For publishing to crates.io, create a secret named CARGO_REGISTRY_TOKEN
          # CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # This second job builds and uploads the binaries.
  # It ONLY runs if the 'release-plz' job actually created a release.
  upload-binaries:
    name: Build and Upload Binaries
    needs: release-plz-release
    if: needs.release-plz-release.outputs.releases_created == 'true'
    permissions:
      contents: write # Needed to upload release assets.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin # For Apple Silicon
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Run tests with release profile
        # This is a final sanity check on each platform before publishing.
        run: cargo test --workspace --release

      - name: Build and upload 'pulsebeam' binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: pulsebeam
          tag: ${{ needs.release-plz.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.target }}

      - name: Build and upload 'pulsebeam-cli' binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: pulsebeam-cli
          tag: ${{ needs.release-plz-release.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.target }}
