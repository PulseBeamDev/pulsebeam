name: Release Please

on:
  push:
    branches:
      - main

jobs:
  # This first job runs release-plz to manage the release process.
  release-plz:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      # These outputs are passed to the next job.
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with: { toolchain: stable, profile: minimal, override: true }

      - name: Run release-plz
        id: release
        uses: MarcoIeni/release-plz-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # For publishing to crates.io, create a secret named CARGO_REGISTRY_TOKEN
          # REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # This second job builds and uploads the binaries.
  # It ONLY runs if the 'release-plz' job actually created a release.
  upload-binaries:
    name: Build and Upload Binaries
    needs: release-plz
    if: needs.release-plz.outputs.releases_created == 'true'
    permissions:
      contents: write # Needed to upload release assets.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin # For Apple Silicon
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Run tests with release profile
        # This is a final sanity check on each platform before publishing.
        run: cargo test --workspace --release

      - name: Build and upload 'pulsebeam' binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: pulsebeam
          tag: ${{ needs.release-plz.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.target }}

      - name: Build and upload 'pulsebeam-cli' binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: pulsebeam-cli
          tag: ${{ needs.release-plz.outputs.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.target }}
